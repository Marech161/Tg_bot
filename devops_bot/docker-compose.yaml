version: '3.4'

services:
  bot:
    image: bot_image
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "2222:${RM_PORT}"
  db:
    image: db_image
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres 
      -c archive_mode=on
      -c archive_command='cp %p /oracle/pg_data/archive/%f'
      -c max_wal_senders=10 
      -c wal_level=replica
      -c wal_log_hints=on 
      -c hot_standby=on 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
      -c log_replication_commands=on
      -c logging_collector=on
      -c password_encryption=scram-sha-256
    env_file:
      - .env
    ports:
      - "${DB_PORT}:${DB_PORT}"
  db_repl:
    image: db_repl_image
    environment:
      PGPASSWORD: ${DB_REPL_PASSWORD}
      POSTGRES_HOST: ${DB_REPL_HOST}
      POSTGRES_USER: ${DB_REPL_USER}
      POSTGRES_PASSWORD: ${DB_REPL_PASSWORD}
    user: postgres
    command: | 
     bash -c "
      rm -rf /var/lib/postgresql/data/* 
      until pg_basebackup -R -h ${DB_HOST} -U ${DB_REPL_USER} -D /var/lib/postgresql/data --slot=replication_slot
      do
      echo 'Waiting for primary to connect...'
      sleep 3s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "    
    env_file:
      - .env
    depends_on:
      - db
